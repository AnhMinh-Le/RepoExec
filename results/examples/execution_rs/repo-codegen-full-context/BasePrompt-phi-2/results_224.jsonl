{"task_id": 224, "prediction_id": 0, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 1, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.task.Task):\n            outputs.append(output)\n            continue\n        outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 2, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 3, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 4, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    if isinstance(task, luigi.Task):\n        if task.output().exists():\n            return [task.output()]\n        else:\n            return []\n    else:\n        return flatten([flatten_output(t) for t in task.outputs()])\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 920, in <module>\n  File \"<string>\", line 919, in test_56\n  File \"<string>\", line 898, in flatten_output\nAttributeError: 'list' object has no attribute 'exists'\n", "passed": false}
{"task_id": 224, "prediction_id": 5, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.is_output():\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 6, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 7, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.task.Task):\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 8, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.outputs():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 920, in <module>\n  File \"<string>\", line 919, in test_56\n  File \"<string>\", line 898, in flatten_output\nAttributeError: 'Task' object has no attribute 'outputs'. Did you mean: 'output'?\n", "passed": false}
{"task_id": 224, "prediction_id": 9, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.outputs():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 920, in <module>\n  File \"<string>\", line 919, in test_56\n  File \"<string>\", line 898, in flatten_output\nAttributeError: 'Task' object has no attribute 'outputs'. Did you mean: 'output'?\n", "passed": false}
{"task_id": 224, "prediction_id": 10, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.Task):\n            outputs.append(output)\n            continue\n        outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 11, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 12, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 13, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    if task.output().exists():\n        return [task.output()]\n    outputs = []\n    for output in task.outputs():\n        outputs += flatten_output(output)\n    return outputs\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 919, in <module>\n  File \"<string>\", line 918, in test_56\n  File \"<string>\", line 897, in flatten_output\nAttributeError: 'list' object has no attribute 'exists'\n", "passed": false}
{"task_id": 224, "prediction_id": 14, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.task.Output):\n            continue\n        if output.task is task:\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output.task)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 15, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.is_output():\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 16, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 17, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    if not task.outputs():\n        return []\n    outputs = []\n    for output in task.outputs():\n        if isinstance(output, luigi.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 922, in <module>\n  File \"<string>\", line 921, in test_56\n  File \"<string>\", line 897, in flatten_output\nAttributeError: 'Task' object has no attribute 'outputs'. Did you mean: 'output'?\n", "passed": false}
{"task_id": 224, "prediction_id": 18, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 19, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 20, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 21, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.task.Task):\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 22, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 23, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 24, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.task is task:\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output.task)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 25, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.is_output():\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 26, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 27, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.task.Task):\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 28, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.outputs():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 920, in <module>\n  File \"<string>\", line 919, in test_56\n  File \"<string>\", line 898, in flatten_output\nAttributeError: 'Task' object has no attribute 'outputs'. Did you mean: 'output'?\n", "passed": false}
{"task_id": 224, "prediction_id": 29, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.task is None:\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output.task)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 30, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.task.Task):\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 31, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.outputs():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 920, in <module>\n  File \"<string>\", line 919, in test_56\n  File \"<string>\", line 898, in flatten_output\nAttributeError: 'Task' object has no attribute 'outputs'. Did you mean: 'output'?\n", "passed": false}
{"task_id": 224, "prediction_id": 32, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 33, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 34, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 35, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.task.Task):\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 36, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 37, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 38, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 39, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 40, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.is_output():\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 41, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 42, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if not isinstance(output, luigi.task.Task):\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 43, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 44, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.task is None:\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output.task)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 45, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 46, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if isinstance(output, luigi.task.Task):\n            outputs += flatten_output(output)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 47, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.is_output():\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 48, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.task is not None:\n            outputs += flatten_output(output.task)\n        else:\n            outputs.append(output)\n    return outputs\n", "message": "passed", "passed": true}
{"task_id": 224, "prediction_id": 49, "generation": "def flatten_output(task):\n    \"\"\"\n    Lists all output targets by recursively walking output-less (wrapper) tasks.\n\n    FIXME order consistently.\n    \"\"\"\n    outputs = []\n    for output in task.output():\n        if output.is_output():\n            outputs.append(output)\n        else:\n            outputs += flatten_output(output)\n    return outputs\n", "message": "passed", "passed": true}
