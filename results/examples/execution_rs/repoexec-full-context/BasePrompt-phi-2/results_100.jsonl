{"task_id": 100, "prediction_id": 0, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 1, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 2, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 3, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 4, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=lambda x: x.created)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 5, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(1))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 6, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    oldest_time = None\n    oldest_obj = None\n    for obj in live_refs[class_name].values():\n        if oldest_time is None or obj.time < oldest_time:\n            oldest_time = obj.time\n            oldest_obj = obj\n    return oldest_obj\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 7, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 8, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 9, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 10, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 11, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 12, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 13, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 14, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 15, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name in live_refs:\n        return min(live_refs[class_name].values(), key=itemgetter('time'))\n    return None\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 16, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name in live_refs:\n        return min(live_refs[class_name].values(), key=itemgetter('created'))\n    else:\n        return None\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 17, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 18, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 19, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 20, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter(1))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 21, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 22, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(1))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 23, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 24, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 25, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 26, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 27, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 28, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 29, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 30, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 31, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 32, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    class_refs = live_refs[class_name]\n    if not class_refs:\n        return None\n    return min(class_refs.values(), key=itemgetter('created'))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 33, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 34, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 35, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter('time'))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 36, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 37, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name], key=itemgetter('created'))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 38, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name in live_refs:\n        return min(live_refs[class_name].values(), key=itemgetter(1))\n    else:\n        return None\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 39, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    if class_name not in live_refs:\n        return None\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "passed", "passed": true}
{"task_id": 100, "prediction_id": 40, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter(0))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 41, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 42, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter(1))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 43, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 44, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 45, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return live_refs[class_name].popitem()[1]\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\n  File \"/usr/local/lib/python3.10/weakref.py\", line 499, in popitem\n    key, value = self.data.popitem()\nKeyError: 'popitem(): dictionary is empty'\n", "passed": false}
{"task_id": 100, "prediction_id": 46, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 47, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter('created'))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 48, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=lambda x: x.created)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
{"task_id": 100, "prediction_id": 49, "generation": "def get_oldest(class_name):\n    \"\"\"Get the oldest object for a specific class name\"\"\"\n    return min(live_refs[class_name].values(), key=itemgetter(1))\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 84, in <module>\n  File \"<string>\", line 83, in test_4\n  File \"<string>\", line 70, in get_oldest\nValueError: min() arg is an empty sequence\n", "passed": false}
